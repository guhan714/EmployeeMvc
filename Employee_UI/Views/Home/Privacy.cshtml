@{
    ViewData["Title"] = "Implementation Summary";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />

<div class="container py-5">
    <h2 class="mb-4 text-primary fw-bold text-center">
        <i class="bi bi-card-checklist me-2"></i>My Implementation Summary
    </h2>

    <div class="row row-cols-1 row-cols-md-2 g-4">

        <!-- Authentication -->
        <div class="col">
            <div class="card shadow-sm h-100 border-0">
                <div class="card-body">
                    <h5 class="card-title text-primary"><i class="bi bi-shield-lock-fill me-2"></i>Authentication</h5>
                    <p class="card-text">
                        Implemented secure login using:
                    </p>
                    <ul>
                        <li><strong>Cookie-based Authentication</strong> with expiration</li>
                        <li><strong>Claims-based Roles</strong> stored in cookies</li>
                        <li>Session tracking with user name and login time</li>
                    </ul>
                </div>
            </div>
        </div>

        <!-- Employees -->
        <div class="col">
            <div class="card shadow-sm h-100 border-0">
                <div class="card-body">
                    <h5 class="card-title text-success"><i class="bi bi-people-fill me-2"></i>Employees</h5>
                    <p class="card-text">
                        Developed listing and CRUD features with:
                    </p>
                    <ul>
                        <li><strong>DataTables</strong> for pagination, sorting, searching</li>
                        <li>
                            <strong>Authorization</strong>:
                            <ul>
                                <li>Only Admins can see <code>Edit</code> / <code>Delete</code> buttons</li>
                                <li>Other roles get <code>Details</code> view only</li>
                            </ul>
                        </li>
                        <li>Handled invalid/null API results gracefully</li>
                    </ul>
                </div>
            </div>
        </div>

        <!-- Departments -->
        <div class="col">
            <div class="card shadow-sm h-100 border-0">
                <div class="card-body">
                    <h5 class="card-title text-warning"><i class="bi bi-diagram-3-fill me-2"></i>Departments</h5>
                    <p class="card-text">
                        Secured department CRUD with:
                    </p>
                    <ul>
                        <li><strong>[Authorize(Roles = "Admin")]</strong> applied on controller</li>
                        <li>Only admin users can access this section</li>
                        <li>Used EF Core with async LINQ queries</li>
                    </ul>
                </div>
            </div>
        </div>

        <!-- Roles -->
        <div class="col">
            <div class="card shadow-sm h-100 border-0">
                <div class="card-body">
                    <h5 class="card-title text-danger"><i class="bi bi-person-badge-fill me-2"></i>Roles</h5>
                    <p class="card-text">
                        Created role management system:
                    </p>
                    <ul>
                        <li>Role table with RoleId and RoleName</li>
                        <li>Assigned roles to users on login</li>
                        <li>Only Admins can create/edit roles</li>
                    </ul>
                </div>
            </div>
        </div>

        <!-- Error Handling -->
        <div class="col">
            <div class="card shadow-sm h-100 border-0">
                <div class="card-body">
                    <h5 class="card-title text-secondary"><i class="bi bi-exclamation-circle-fill me-2"></i>Error Handling & Access</h5>
                    <p class="card-text">
                        Improved user feedback and security with:
                    </p>
                    <ul>
                        <li><strong>Access Denied</strong> page for forbidden routes</li>
                        <li><strong>Exception handling</strong> using Result<T> pattern</li>
                        <li>User-friendly messages and logging</li>
                    </ul>
                </div>
            </div>
        </div>

    </div>
</div>
