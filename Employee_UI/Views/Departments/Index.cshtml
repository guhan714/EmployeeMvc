@model IEnumerable<Employee.Domain.Models.Department>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="mb-0">Departments</h2>
        <a asp-action="Create" class="btn btn-primary btn-sm">
            Create New
        </a>
    </div>
    <table id="DepartmentTable" class="table table-bordered table-hover table-striped align-middle text-nowrap">
        <thead>
            <tr>
                <th>
                    Department Name
                </th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.DepartmentName)
                    </td>
                    <td class="">
                        <a asp-action="Edit" asp-route-id="@item.DepartmentId" class="text-primary me-2 d-inline-block" title="Edit">
                            <i class="bi bi-pencil-square"></i>
                        </a><a asp-action="Details" asp-route-id="@item.DepartmentId" class="text-info me-2 d-inline-block" title="Details">
                            <i class="bi bi-info-circle"></i>
                        </a><a asp-action="Delete" asp-route-id="@item.DepartmentId" class="text-danger d-inline-block" title="Delete">
                            <i class="bi bi-trash"></i>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function(){
            $('#DepartmentTable').DataTable(
            {
                 drawCallback: function(settings) {
                  var pagination = $(this).closest('.dataTables_wrapper').find('.dataTables_paginate');
                  pagination.toggle(this.api().page.info().pages > 1);
                }
            });
        })
    </script>
}